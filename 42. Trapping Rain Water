https://leetcode.com/problems/trapping-rain-water/description/?envType=company&envId=google&favoriteSlug=google-thirty-days


42. Trapping Rain Water
Solved
Hard
Topics
Companies
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

 

Example 1:


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
Example 2:

Input: height = [4,2,0,3,2,5]
Output: 9
 

Constraints:

n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105
Seen this question in a real interview before?
1/5
Yes
No
Accepted
2.5M
Submissions
3.9M
Acceptance Rate
63.6%
Topics
Companies
0 - 3 months
Amazon
38
Google
29
Goldman Sachs
21
Microsoft
12
Bloomberg
6
Meta
5
Snowflake
5
Yandex
4
Oracle
3
TikTok
3
0 - 6 months
Apple
4
Visa
4
Salesforce
4
PhonePe
4
Zoho
3
Uber
3
Airbnb
3
tcs
2
Flipkart
2
Wix
2
6 months ago
Adobe
47
Yahoo
14
ServiceNow
12
Walmart Labs
9
Samsung
9
Intel
9
Cisco
6
Intuit
5
PayPal
5
Coveo
5

//code
next greater element technique s bhi ho ksta h my acc
class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        vector<int> left(n, -1);
        vector<int> right(n, -1);
        int max_left=-1;
        int max_right=-1;
        for(int i=0;i<n;i++)
        {
            max_left=max(max_left, height[i]);
            left[i]=max_left;     
        }
         for(int i=n-1;i>=0;i--)
        {
            max_right=max(max_right, height[i]);
            right[i]=max_right;   
        }
        int ans=0;
        for(int i=0;i<n;i++)
        {
            int water_i=min(left[i], right[i])-height[i];
            ans=ans+water_i;
        }
        return ans;
    }
};
