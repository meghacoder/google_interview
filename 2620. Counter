https://leetcode.com/problems/counter/description/?envType=company&envId=google&favoriteSlug=google-thirty-days


2620. Counter
Solved
Easy
Topics
Companies
Hint
Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).

 

Example 1:

Input: 
n = 10 
["call","call","call"]
Output: [10,11,12]
Explanation: 
counter() = 10 // The first time counter() is called, it returns n.
counter() = 11 // Returns 1 more than the previous time.
counter() = 12 // Returns 1 more than the previous time.
Example 2:

Input: 
n = -2
["call","call","call","call","call"]
Output: [-2,-1,0,1,2]
Explanation: counter() initially returns -2. Then increases after each sebsequent call.
 

Constraints:

-1000 <= n <= 1000
0 <= calls.length <= 1000
calls[i] === "call"
Seen this question in a real interview before?
1/5
Yes
No
Accepted
480.9K
Submissions
588.7K
Acceptance Rate
81.7%
Topics
Companies
0 - 3 months
Google
4
Meta
2
Microsoft
2
6 months ago
Amazon
17
Bloomberg
7
Adobe
7
Apple
6
Uber
4
Yahoo
3
Yandex
2
Cognizant
2
CARS24
2



//code
class Solution {
public:
    int takeCharacters(string s, int k) {
        int n=s.length();
        vector<int> vec(3, 0);
        for(int i=0;i<n;i++)
        {
            vec[s[i]-'a']++;
        }

        if(vec[0]<k || vec[1]<k || vec[2]<k)
        return -1;

        int i=0;
        int j=0;
        int ans=n;
        
        while(j<n)
        {
            vec[s[j]-'a']--;
            if(vec[0]>=k && vec[1]>=k && vec[2]>=k)
            {
                ans=min(ans, n-(j-i+1));
                j++;
            }
            else
            {
                while(!(vec[0]>=k && vec[1]>=k && vec[2]>=k))
                {
                    vec[s[i]-'a']++;
                    i++;
                }

                 if(vec[0]>=k && vec[1]>=k && vec[2]>=k)
                {
                    ans=min(ans, n-(j-i+1));
                    j++;
                }

            }
        }

        return ans;
        
    }
};
